[{"name":"app.R","content":"library(shiny)\r\nlibrary(plotly)\r\nlibrary(gridlayout)\r\nlibrary(bslib)\r\nlibrary(DT)\r\nlibrary(ggplot2)\r\nlibrary(dplyr)\r\n\r\nui <- grid_page(\r\n  layout = c(\r\n    \"header  header   header  \",\r\n    \"sidebar bluePlot bluePlot\",\r\n    \"sidebar area5    area5   \",\r\n    \"sidebar area4    plotly  \"\r\n  ),\r\n  row_sizes = c(\r\n    \"65px\",\r\n    \"1.38fr\",\r\n    \"0.35fr\",\r\n    \"1.27fr\"\r\n  ),\r\n  col_sizes = c(\r\n    \"250px\",\r\n    \"0.95fr\",\r\n    \"1.05fr\"\r\n  ),\r\n  gap_size = \"1rem\",\r\n  grid_card(\r\n    area = \"sidebar\",\r\n    card_header(\"Filters\"),\r\n    card_body(\r\n      sliderInput(\r\n        inputId = \"numChicks\",\r\n        label = \"Number of Chicks\",\r\n        min = 1,\r\n        max = 50,\r\n        value = 6,\r\n        width = \"100%\"\r\n      )\r\n    )\r\n  ),\r\n  grid_card_text(\r\n    area = \"header\",\r\n    content = \"Chicks Weight Visual App\",\r\n    alignment = \"center\",\r\n    is_title = FALSE\r\n  ),\r\n  grid_card_plot(area = \"bluePlot\"),\r\n  grid_card(\r\n    area = \"plotly\",\r\n    card_header(\"Interactive Plot\"),\r\n    card_body(\r\n      plotlyOutput(\r\n        outputId = \"distPlot\",\r\n        width = \"100%\",\r\n        height = \"100%\"\r\n      )\r\n    )\r\n  ),\r\n  grid_card(\r\n    area = \"area4\",\r\n    card_header(\"Interactive Plot\"),\r\n    card_body(plotlyOutput(outputId = \"plot\"))\r\n  ),\r\n  grid_card(\r\n    area = \"area5\",\r\n    card_body(\r\n      \"Further deep dives to understand the relationship between chick weight and diet. \r\n      Note: The ChickWeight data frame has 578 rows and 4 columns from an experiment on the effect of diet on early growth of chicks.\r\n      \"\r\n    )\r\n  )\r\n)\r\n\r\n\r\nserver <- function(input, output) {\r\n   \r\n  output$distPlot <- renderPlotly({\r\n    # generate bins based on input$bins from ui.R\r\n    df = ChickWeight\r\n    plot_ly(df, x = ~ weight, type = \"histogram\")|>\r\n      layout(title = \"Chick Weight Distribution\")\r\n  })\r\n  \r\n  output$bluePlot <- renderPlot({\r\n    # generate bins based on input$bins from ui.R\r\n\r\n    df = ChickWeight\r\n\r\n    df|>\r\n      filter(as.numeric(Chick)< input$numChicks)|>\r\n      ggplot() +\r\n      aes(x = Time, y = weight, colour = Chick) +\r\n      geom_line() +\r\n      scale_color_hue(direction = 1) +\r\n      labs(title = \"Chicks Weight over time\", color = \"number of chicks\") +\r\n      theme_minimal()\r\n    \r\n\r\n  })\r\n  \r\n  output$myTable <- renderDT({\r\n    head(faithful, input$numRows)\r\n  })\r\n\r\n  output$plot <- renderPlotly({\r\n    df = ChickWeight\r\n    plot_ly(df, y = ~weight, color = ~Diet, type = \"box\")|>\r\n      layout(title = \"Distribution of chick weights by Diet\")\r\n    \r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n  \r\n\r\n","type":"text"}]
